<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>

    <link href="~/css/Style.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

</head>
<body>

    @RenderBody()

    <script src="~/js/site.js"></script>

    <script>
        $(document).ready(function () {

            M.updateTextFields();

            var sidebar = $('.collapsible');
            var SBInstances = M.Collapsible.init(sidebar/*, options*/);

            var loginModal = $('#loginModal');
            var LMInstances = M.Modal.init(loginModal/*, options*/);

            //Start of Category JS script
            var createCategoryModal = $('#createCategoryModal');
            var CCMInstances = M.Modal.init(createCategoryModal/*, options*/);

            var deleteCategoryModal = $('#deleteCategoryModal');
            var DCMInstances = M.Modal.init(deleteCategoryModal/*, options*/);

            var editCategoryModal = $('#editCategoryModal');
            var ECMInstances = M.Modal.init(editCategoryModal/*, options*/);

            $('.deleteCat').click(function () {

                var categoryId = $(this).data('id');
                var deleteInput = $('.deleteCategoryModalInput').attr('value', categoryId);

            });

            $('.editCat').click(function () {

                var categoryId = $(this).data('id');
                var categoryName = $(this).data('name');
                var editInput = $('.editCategoryModalInput').attr('value', categoryId);
                var editName = $('.editCategoryModalValue').attr('value', categoryName);

                M.updateTextFields();

            });

            // Start of subcategory JS script
            var createSubcategoryModal = $('#createSubcategoryModal');
            var CSMInstances = M.Modal.init(createSubcategoryModal/*, options*/);

            // Category select
            var categorySelect = $('.categoryselect');
            var CSInstances = M.FormSelect.init(categorySelect/*, options*/);

            var createSubcategorySubmit = $('#createSubcategorySubmit');
            createSubcategorySubmit.hide();

            categorySelect.on('change', () => {
                createSubcategorySubmit.show();
            });

            var editSubcategoryModal = $('#editSubcategoryModal');
            var ESMInstances = M.Modal.init(editSubcategoryModal/*, options*/);

            var deleteSubcategoryModal = $('#deleteSubcategoryModal');
            var DSMInstances = M.Modal.init(deleteSubcategoryModal/*, options*/);

            $('.deleteSubcat').click(function () {
                var subcategoryId = $(this).data('id');
                var deleteInput = $('.deleteSubcategoryModalInput').attr('value', subcategoryId);
            });

            $('.editSubcat').click(function () {

                var subcategoryId = $(this).data('id');
                var subcategoryName = $(this).data('name');
                var editInput = $('.editSubcategoryModalInput').attr('value', subcategoryId);
                var editName = $('.editSubcategoryModalValue').attr('value', subcategoryName);

                M.updateTextFields();

            });

            // Start of product JS script
            var CreateProductModal = $('#createProductModal');
            var CPInstances = M.Modal.init(CreateProductModal/*, options*/);

            // Subcategory select
            var subcategorySelect = $('.subcategoryselect');
            var SSInstances = M.FormSelect.init(subcategorySelect/*, options*/);

            var createProductSubmit = $('#createProductSubmit');
            createProductSubmit.hide();

            subcategorySelect.on('change', () => {
                createProductSubmit.show();
            });

            var editProductModal = $('#editProductModal');
            var EPInstances = M.Modal.init(editProductModal/*, options*/);

            var deleteProductModal = $('#deleteProductModal');
            var DPInstances = M.Modal.init(deleteProductModal/*, options*/);

            $('.deleteProd').click(function () {
                var productId = $(this).data('id');
                var deleteInput = $('.deleteProductModalInput').attr('value', productId);
            });

            $('.editProd').click(function () {

                $('.editProductModalDescription').empty();
                var productId = $(this).data('id');
                var productName = $(this).data('name');
                var productPrice = $(this).data('price');
                var productDescription = $(this).data('description');
                var editInput = $('.editProductModalInput').attr('value', productId);
                var editName = $('.editProductModalValue').attr('value', productName);
                var editPrice = $('.editProductModalPrice').attr('value', productPrice);
                var editDescription = $('.editProductModalDescription').val(productDescription);

                M.updateTextFields();
                M.textareaAutoResize($('.editProductModalDescription'));
            });

            // Existing attributes select
            var attributeSelect = $('#attribute-select');
            var ASInstances = M.FormSelect.init(attributeSelect/*, options*/);
            
            // Create attribute modal
            var createAttributeModal = $('#createAttributeModal');
            var CAMInstances = M.Modal.init(createAttributeModal/*, options*/);

            // Attribute type selector
            var attrTypeSelect = $('.attrTypeSelect');
            var ATSInstances = M.FormSelect.init(attrTypeSelect/*, options*/);

            var createAttributeName = $('#create-attribute-name');

            // choose existing attributegroups
            attributeSelect.on('change', function () {
                var value = $(this).val();

                $('#sub-attribute-container').empty();

                //console.log(value);

                var attrConInput = $('#attribute-container-input');
                console.log(attrConInput.val() + value);

                //console.log(attrConInput.val());

                attrConInput.val(value);
                
                var part = value.split('%');

                var name = part[0];
                var data = part[1];

                $('#sub-attribute-container').append(
                    '<div class="chip"><span class="value" data-value="' + data + '">'
                    + name
                    + '</span><i class="material-icons close">close</i></div>'
                );
            });


            // Create attribute function
            $('button#create-attribute-button').click(function () {
                var attributeName = $('#create-attribute-name').val();
                var attributeValue = $('#attributeType-select').val();

                $('#attribute-container').append(
                    '<div class="chip"><span class="value" data-value="' + attributeValue + '">'
                    + attributeName
                    + '</span><i class="material-icons close">close</i></div>'
                );


                $('#create-attribute-name').val('');
            });


            // Save attributes function
            $('#save-attributes').click(function () {

                $('#sub-attribute-container').empty();

                var test = $('#attribute-container').children();

                //var sendToSubcategory = $('#attribute-container').children().appendTo('#sub-attribute-container');

                var attributeGroupName = $('#attribute-group-name').val();

                //var test = $('#sub-attribute-container').children();

                var attrArray = [];

                $.each(test, function (i, attribute) {
                    var text = $(attribute).find('span.value').text();
                    var value = $(attribute).find('span.value').data('value');
                    if (text && value && attributeGroupModal) {
                        attrArray.push(text + '=' + value);
                        console.log(text + '=' + value);
                    }
                });

                console.log(attrArray);

                var stringvalue = attrArray.join('|');

                console.log(attributeGroupName + '%' + stringvalue);

                var AttrConInput = $('#attribute-container-input')

                AttrConInput.attr('value', attributeGroupName + '%' + stringvalue);

                $('#sub-attribute-container').append(
                    '<div class="chip"><span class="value" data-value="' + stringvalue + '">'
                    + attributeGroupName
                    + '</span><i class="material-icons close">close</i></div>'
                );

            });

            var attributeGroupModal = $('#createAttributeGroupModal');
            var AGMInstances = M.Modal.init(attributeGroupModal/*, options*/);

            var addAttributeGroup = $('#add-attribute-group');

            addAttributeGroup.click(function () {
                var AttrGroupAttributeName = $('#AttrGroup-attribute-name').val();
                var attributeTypeGroup = $('#attributeType-group').val();

                $('#attribute-group-attributes').append(
                    '<div class="chip"><span class="value" data-value="' + attributeTypeGroup + '">'
                    + AttrGroupAttributeName
                    + '</span><i class="material-icons close">close</i></div>'
                );


                $('#AttrGroup-attribute-name').val('');
                attribute - container
            });

        });

    </script>

</body>
</html>
